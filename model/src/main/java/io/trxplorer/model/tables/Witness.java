/*
 * This file is generated by jOOQ.
*/
package io.trxplorer.model.tables;


import io.trxplorer.model.Keys;
import io.trxplorer.model.Tmp;
import io.trxplorer.model.tables.records.WitnessRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Witness extends TableImpl<WitnessRecord> {

    private static final long serialVersionUID = 1614830155;

    /**
     * The reference instance of <code>tmp.witness</code>
     */
    public static final Witness WITNESS = new Witness();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WitnessRecord> getRecordType() {
        return WitnessRecord.class;
    }

    /**
     * The column <code>tmp.witness.id</code>.
     */
    public final TableField<WitnessRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tmp.witness.vote_count</code>.
     */
    public final TableField<WitnessRecord, ULong> VOTE_COUNT = createField("vote_count", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tmp.witness.url</code>.
     */
    public final TableField<WitnessRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(250), this, "");

    /**
     * The column <code>tmp.witness.total_produced</code>.
     */
    public final TableField<WitnessRecord, ULong> TOTAL_PRODUCED = createField("total_produced", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>tmp.witness.total_missed</code>.
     */
    public final TableField<WitnessRecord, ULong> TOTAL_MISSED = createField("total_missed", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>tmp.witness.latest_block_num</code>.
     */
    public final TableField<WitnessRecord, ULong> LATEST_BLOCK_NUM = createField("latest_block_num", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tmp.witness.latest_slot_num</code>.
     */
    public final TableField<WitnessRecord, Long> LATEST_SLOT_NUM = createField("latest_slot_num", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>tmp.witness.isJobs</code>.
     */
    public final TableField<WitnessRecord, Byte> ISJOBS = createField("isJobs", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>tmp.witness.account_id</code>.
     */
    public final TableField<WitnessRecord, ULong> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>tmp.witness.address</code>.
     */
    public final TableField<WitnessRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * Create a <code>tmp.witness</code> table reference
     */
    public Witness() {
        this("witness", null);
    }

    /**
     * Create an aliased <code>tmp.witness</code> table reference
     */
    public Witness(String alias) {
        this(alias, WITNESS);
    }

    private Witness(String alias, Table<WitnessRecord> aliased) {
        this(alias, aliased, null);
    }

    private Witness(String alias, Table<WitnessRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Tmp.TMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<WitnessRecord, ULong> getIdentity() {
        return Keys.IDENTITY_WITNESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WitnessRecord> getPrimaryKey() {
        return Keys.KEY_WITNESS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WitnessRecord>> getKeys() {
        return Arrays.<UniqueKey<WitnessRecord>>asList(Keys.KEY_WITNESS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<WitnessRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WitnessRecord, ?>>asList(Keys.FK_WITNESS_ACCOUNT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Witness as(String alias) {
        return new Witness(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Witness rename(String name) {
        return new Witness(name, null);
    }
}
