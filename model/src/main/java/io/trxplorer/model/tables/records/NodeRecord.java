/*
 * This file is generated by jOOQ.
*/
package io.trxplorer.model.tables.records;


import io.trxplorer.model.tables.Node;

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NodeRecord extends UpdatableRecordImpl<NodeRecord> implements Record11<ULong, String, Integer, Byte, BigDecimal, BigDecimal, String, String, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1209332019;

    /**
     * Setter for <code>tmp.node.id</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>tmp.node.id</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>tmp.node.host</code>.
     */
    public void setHost(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>tmp.node.host</code>.
     */
    public String getHost() {
        return (String) get(1);
    }

    /**
     * Setter for <code>tmp.node.port</code>.
     */
    public void setPort(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>tmp.node.port</code>.
     */
    public Integer getPort() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>tmp.node.up</code>.
     */
    public void setUp(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>tmp.node.up</code>.
     */
    public Byte getUp() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>tmp.node.longitude</code>.
     */
    public void setLongitude(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>tmp.node.longitude</code>.
     */
    public BigDecimal getLongitude() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>tmp.node.latitude</code>.
     */
    public void setLatitude(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>tmp.node.latitude</code>.
     */
    public BigDecimal getLatitude() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>tmp.node.country_code</code>.
     */
    public void setCountryCode(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>tmp.node.country_code</code>.
     */
    public String getCountryCode() {
        return (String) get(6);
    }

    /**
     * Setter for <code>tmp.node.country</code>.
     */
    public void setCountry(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>tmp.node.country</code>.
     */
    public String getCountry() {
        return (String) get(7);
    }

    /**
     * Setter for <code>tmp.node.city</code>.
     */
    public void setCity(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>tmp.node.city</code>.
     */
    public String getCity() {
        return (String) get(8);
    }

    /**
     * Setter for <code>tmp.node.last_updated</code>.
     */
    public void setLastUpdated(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>tmp.node.last_updated</code>.
     */
    public Timestamp getLastUpdated() {
        return (Timestamp) get(9);
    }

    /**
     * Setter for <code>tmp.node.date_created</code>.
     */
    public void setDateCreated(Timestamp value) {
        set(10, value);
    }

    /**
     * Getter for <code>tmp.node.date_created</code>.
     */
    public Timestamp getDateCreated() {
        return (Timestamp) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<ULong, String, Integer, Byte, BigDecimal, BigDecimal, String, String, String, Timestamp, Timestamp> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<ULong, String, Integer, Byte, BigDecimal, BigDecimal, String, String, String, Timestamp, Timestamp> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return Node.NODE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Node.NODE.HOST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Node.NODE.PORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return Node.NODE.UP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field5() {
        return Node.NODE.LONGITUDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field6() {
        return Node.NODE.LATITUDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Node.NODE.COUNTRY_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Node.NODE.COUNTRY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Node.NODE.CITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field10() {
        return Node.NODE.LAST_UPDATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field11() {
        return Node.NODE.DATE_CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getHost();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getPort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getUp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value5() {
        return getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value6() {
        return getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getCountryCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getCountry();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getCity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value10() {
        return getLastUpdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value11() {
        return getDateCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NodeRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NodeRecord value2(String value) {
        setHost(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NodeRecord value3(Integer value) {
        setPort(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NodeRecord value4(Byte value) {
        setUp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NodeRecord value5(BigDecimal value) {
        setLongitude(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NodeRecord value6(BigDecimal value) {
        setLatitude(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NodeRecord value7(String value) {
        setCountryCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NodeRecord value8(String value) {
        setCountry(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NodeRecord value9(String value) {
        setCity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NodeRecord value10(Timestamp value) {
        setLastUpdated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NodeRecord value11(Timestamp value) {
        setDateCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NodeRecord values(ULong value1, String value2, Integer value3, Byte value4, BigDecimal value5, BigDecimal value6, String value7, String value8, String value9, Timestamp value10, Timestamp value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NodeRecord
     */
    public NodeRecord() {
        super(Node.NODE);
    }

    /**
     * Create a detached, initialised NodeRecord
     */
    public NodeRecord(ULong id, String host, Integer port, Byte up, BigDecimal longitude, BigDecimal latitude, String countryCode, String country, String city, Timestamp lastUpdated, Timestamp dateCreated) {
        super(Node.NODE);

        set(0, id);
        set(1, host);
        set(2, port);
        set(3, up);
        set(4, longitude);
        set(5, latitude);
        set(6, countryCode);
        set(7, country);
        set(8, city);
        set(9, lastUpdated);
        set(10, dateCreated);
    }
}
