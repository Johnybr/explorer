/*
 * This file is generated by jOOQ.
*/
package io.trxplorer.model.tables.daos;


import io.trxplorer.model.tables.Transaction;
import io.trxplorer.model.tables.records.TransactionRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionDao extends DAOImpl<TransactionRecord, io.trxplorer.model.tables.pojos.Transaction, ULong> {

    /**
     * Create a new TransactionDao without any configuration
     */
    public TransactionDao() {
        super(Transaction.TRANSACTION, io.trxplorer.model.tables.pojos.Transaction.class);
    }

    /**
     * Create a new TransactionDao with an attached configuration
     */
    public TransactionDao(Configuration configuration) {
        super(Transaction.TRANSACTION, io.trxplorer.model.tables.pojos.Transaction.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ULong getId(io.trxplorer.model.tables.pojos.Transaction object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Transaction> fetchById(ULong... values) {
        return fetch(Transaction.TRANSACTION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public io.trxplorer.model.tables.pojos.Transaction fetchOneById(ULong value) {
        return fetchOne(Transaction.TRANSACTION.ID, value);
    }

    /**
     * Fetch records that have <code>hash IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Transaction> fetchByHash(String... values) {
        return fetch(Transaction.TRANSACTION.HASH, values);
    }

    /**
     * Fetch a unique record that has <code>hash = value</code>
     */
    public io.trxplorer.model.tables.pojos.Transaction fetchOneByHash(String value) {
        return fetchOne(Transaction.TRANSACTION.HASH, value);
    }

    /**
     * Fetch records that have <code>timestamp IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Transaction> fetchByTimestamp(Timestamp... values) {
        return fetch(Transaction.TRANSACTION.TIMESTAMP, values);
    }

    /**
     * Fetch records that have <code>expiration IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Transaction> fetchByExpiration(Timestamp... values) {
        return fetch(Transaction.TRANSACTION.EXPIRATION, values);
    }

    /**
     * Fetch records that have <code>confirmed IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Transaction> fetchByConfirmed(Byte... values) {
        return fetch(Transaction.TRANSACTION.CONFIRMED, values);
    }

    /**
     * Fetch records that have <code>block_id IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Transaction> fetchByBlockId(ULong... values) {
        return fetch(Transaction.TRANSACTION.BLOCK_ID, values);
    }

    /**
     * Fetch records that have <code>from IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Transaction> fetchByFrom(String... values) {
        return fetch(Transaction.TRANSACTION.FROM, values);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Transaction> fetchByType(Integer... values) {
        return fetch(Transaction.TRANSACTION.TYPE, values);
    }
}
