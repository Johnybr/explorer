/*
 * This file is generated by jOOQ.
*/
package io.trxplorer.model.tables.daos;


import io.trxplorer.model.tables.Block;
import io.trxplorer.model.tables.records.BlockRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BlockDao extends DAOImpl<BlockRecord, io.trxplorer.model.tables.pojos.Block, ULong> {

    /**
     * Create a new BlockDao without any configuration
     */
    public BlockDao() {
        super(Block.BLOCK, io.trxplorer.model.tables.pojos.Block.class);
    }

    /**
     * Create a new BlockDao with an attached configuration
     */
    public BlockDao(Configuration configuration) {
        super(Block.BLOCK, io.trxplorer.model.tables.pojos.Block.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ULong getId(io.trxplorer.model.tables.pojos.Block object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Block> fetchById(ULong... values) {
        return fetch(Block.BLOCK.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public io.trxplorer.model.tables.pojos.Block fetchOneById(ULong value) {
        return fetchOne(Block.BLOCK.ID, value);
    }

    /**
     * Fetch records that have <code>num IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Block> fetchByNum(ULong... values) {
        return fetch(Block.BLOCK.NUM, values);
    }

    /**
     * Fetch a unique record that has <code>num = value</code>
     */
    public io.trxplorer.model.tables.pojos.Block fetchOneByNum(ULong value) {
        return fetchOne(Block.BLOCK.NUM, value);
    }

    /**
     * Fetch records that have <code>hash IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Block> fetchByHash(String... values) {
        return fetch(Block.BLOCK.HASH, values);
    }

    /**
     * Fetch records that have <code>parent_hash IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Block> fetchByParentHash(String... values) {
        return fetch(Block.BLOCK.PARENT_HASH, values);
    }

    /**
     * Fetch records that have <code>txTrieRoot IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Block> fetchByTxtrieroot(String... values) {
        return fetch(Block.BLOCK.TXTRIEROOT, values);
    }

    /**
     * Fetch records that have <code>tx_count IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Block> fetchByTxCount(UInteger... values) {
        return fetch(Block.BLOCK.TX_COUNT, values);
    }

    /**
     * Fetch records that have <code>timestamp IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Block> fetchByTimestamp(Timestamp... values) {
        return fetch(Block.BLOCK.TIMESTAMP, values);
    }

    /**
     * Fetch records that have <code>size IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Block> fetchBySize(UInteger... values) {
        return fetch(Block.BLOCK.SIZE, values);
    }

    /**
     * Fetch records that have <code>witness_id IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Block> fetchByWitnessId(ULong... values) {
        return fetch(Block.BLOCK.WITNESS_ID, values);
    }

    /**
     * Fetch records that have <code>witness_address IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Block> fetchByWitnessAddress(String... values) {
        return fetch(Block.BLOCK.WITNESS_ADDRESS, values);
    }

    /**
     * Fetch records that have <code>block_time IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Block> fetchByBlockTime(UInteger... values) {
        return fetch(Block.BLOCK.BLOCK_TIME, values);
    }

    /**
     * Fetch records that have <code>confirmed IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.Block> fetchByConfirmed(Byte... values) {
        return fetch(Block.BLOCK.CONFIRMED, values);
    }
}
