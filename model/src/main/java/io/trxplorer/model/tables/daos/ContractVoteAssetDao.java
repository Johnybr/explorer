/*
 * This file is generated by jOOQ.
*/
package io.trxplorer.model.tables.daos;


import io.trxplorer.model.tables.ContractVoteAsset;
import io.trxplorer.model.tables.records.ContractVoteAssetRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContractVoteAssetDao extends DAOImpl<ContractVoteAssetRecord, io.trxplorer.model.tables.pojos.ContractVoteAsset, ULong> {

    /**
     * Create a new ContractVoteAssetDao without any configuration
     */
    public ContractVoteAssetDao() {
        super(ContractVoteAsset.CONTRACT_VOTE_ASSET, io.trxplorer.model.tables.pojos.ContractVoteAsset.class);
    }

    /**
     * Create a new ContractVoteAssetDao with an attached configuration
     */
    public ContractVoteAssetDao(Configuration configuration) {
        super(ContractVoteAsset.CONTRACT_VOTE_ASSET, io.trxplorer.model.tables.pojos.ContractVoteAsset.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ULong getId(io.trxplorer.model.tables.pojos.ContractVoteAsset object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.ContractVoteAsset> fetchById(ULong... values) {
        return fetch(ContractVoteAsset.CONTRACT_VOTE_ASSET.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public io.trxplorer.model.tables.pojos.ContractVoteAsset fetchOneById(ULong value) {
        return fetchOne(ContractVoteAsset.CONTRACT_VOTE_ASSET.ID, value);
    }

    /**
     * Fetch records that have <code>owner_id IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.ContractVoteAsset> fetchByOwnerId(ULong... values) {
        return fetch(ContractVoteAsset.CONTRACT_VOTE_ASSET.OWNER_ID, values);
    }

    /**
     * Fetch records that have <code>transaction_id IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.ContractVoteAsset> fetchByTransactionId(ULong... values) {
        return fetch(ContractVoteAsset.CONTRACT_VOTE_ASSET.TRANSACTION_ID, values);
    }

    /**
     * Fetch records that have <code>support IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.ContractVoteAsset> fetchBySupport(UByte... values) {
        return fetch(ContractVoteAsset.CONTRACT_VOTE_ASSET.SUPPORT, values);
    }

    /**
     * Fetch records that have <code>count IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.ContractVoteAsset> fetchByCount(UInteger... values) {
        return fetch(ContractVoteAsset.CONTRACT_VOTE_ASSET.COUNT, values);
    }

    /**
     * Fetch records that have <code>owner_address IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.ContractVoteAsset> fetchByOwnerAddress(String... values) {
        return fetch(ContractVoteAsset.CONTRACT_VOTE_ASSET.OWNER_ADDRESS, values);
    }

    /**
     * Fetch records that have <code>vote_to_address IN (values)</code>
     */
    public List<io.trxplorer.model.tables.pojos.ContractVoteAsset> fetchByVoteToAddress(String... values) {
        return fetch(ContractVoteAsset.CONTRACT_VOTE_ASSET.VOTE_TO_ADDRESS, values);
    }
}
