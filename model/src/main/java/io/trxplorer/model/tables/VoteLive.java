/*
 * This file is generated by jOOQ.
*/
package io.trxplorer.model.tables;


import io.trxplorer.model.Tmp;
import io.trxplorer.model.tables.records.VoteLiveRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VoteLive extends TableImpl<VoteLiveRecord> {

    private static final long serialVersionUID = -520444286;

    /**
     * The reference instance of <code>tmp.vote_live</code>
     */
    public static final VoteLive VOTE_LIVE = new VoteLive();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VoteLiveRecord> getRecordType() {
        return VoteLiveRecord.class;
    }

    /**
     * The column <code>tmp.vote_live.address</code>.
     */
    public final TableField<VoteLiveRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

    /**
     * The column <code>tmp.vote_live.vote_count</code>.
     */
    public final TableField<VoteLiveRecord, Long> VOTE_COUNT = createField("vote_count", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>tmp.vote_live.position</code>.
     */
    public final TableField<VoteLiveRecord, Integer> POSITION = createField("position", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>tmp.vote_live</code> table reference
     */
    public VoteLive() {
        this("vote_live", null);
    }

    /**
     * Create an aliased <code>tmp.vote_live</code> table reference
     */
    public VoteLive(String alias) {
        this(alias, VOTE_LIVE);
    }

    private VoteLive(String alias, Table<VoteLiveRecord> aliased) {
        this(alias, aliased, null);
    }

    private VoteLive(String alias, Table<VoteLiveRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Tmp.TMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VoteLive as(String alias) {
        return new VoteLive(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VoteLive rename(String name) {
        return new VoteLive(name, null);
    }
}
