/*
 * This file is generated by jOOQ.
*/
package io.trxplorer.model.tables;


import io.trxplorer.model.Keys;
import io.trxplorer.model.Tmp;
import io.trxplorer.model.tables.records.VotingRoundRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VotingRound extends TableImpl<VotingRoundRecord> {

    private static final long serialVersionUID = 138913694;

    /**
     * The reference instance of <code>tmp.voting_round</code>
     */
    public static final VotingRound VOTING_ROUND = new VotingRound();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VotingRoundRecord> getRecordType() {
        return VotingRoundRecord.class;
    }

    /**
     * The column <code>tmp.voting_round.id</code>.
     */
    public final TableField<VotingRoundRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tmp.voting_round.day</code>.
     */
    public final TableField<VotingRoundRecord, UInteger> DAY = createField("day", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>tmp.voting_round.month</code>.
     */
    public final TableField<VotingRoundRecord, UInteger> MONTH = createField("month", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>tmp.voting_round.year</code>.
     */
    public final TableField<VotingRoundRecord, UInteger> YEAR = createField("year", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>tmp.voting_round.round</code>.
     */
    public final TableField<VotingRoundRecord, UInteger> ROUND = createField("round", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * The column <code>tmp.voting_round.start_date</code>.
     */
    public final TableField<VotingRoundRecord, Timestamp> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>tmp.voting_round.end_date</code>.
     */
    public final TableField<VotingRoundRecord, Timestamp> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>tmp.voting_round.sync_start</code>.
     */
    public final TableField<VotingRoundRecord, Timestamp> SYNC_START = createField("sync_start", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>tmp.voting_round.sync_end</code>.
     */
    public final TableField<VotingRoundRecord, Timestamp> SYNC_END = createField("sync_end", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>tmp.voting_round.vote_count</code>.
     */
    public final TableField<VotingRoundRecord, ULong> VOTE_COUNT = createField("vote_count", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * Create a <code>tmp.voting_round</code> table reference
     */
    public VotingRound() {
        this("voting_round", null);
    }

    /**
     * Create an aliased <code>tmp.voting_round</code> table reference
     */
    public VotingRound(String alias) {
        this(alias, VOTING_ROUND);
    }

    private VotingRound(String alias, Table<VotingRoundRecord> aliased) {
        this(alias, aliased, null);
    }

    private VotingRound(String alias, Table<VotingRoundRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Tmp.TMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VotingRoundRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_VOTING_ROUND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VotingRoundRecord> getPrimaryKey() {
        return Keys.KEY_VOTING_ROUND_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VotingRoundRecord>> getKeys() {
        return Arrays.<UniqueKey<VotingRoundRecord>>asList(Keys.KEY_VOTING_ROUND_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VotingRound as(String alias) {
        return new VotingRound(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VotingRound rename(String name) {
        return new VotingRound(name, null);
    }
}
