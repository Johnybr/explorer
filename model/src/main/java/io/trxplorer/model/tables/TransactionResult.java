/*
 * This file is generated by jOOQ.
*/
package io.trxplorer.model.tables;


import io.trxplorer.model.Keys;
import io.trxplorer.model.Tmp;
import io.trxplorer.model.tables.records.TransactionResultRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionResult extends TableImpl<TransactionResultRecord> {

    private static final long serialVersionUID = 896512756;

    /**
     * The reference instance of <code>tmp.transaction_result</code>
     */
    public static final TransactionResult TRANSACTION_RESULT = new TransactionResult();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TransactionResultRecord> getRecordType() {
        return TransactionResultRecord.class;
    }

    /**
     * The column <code>tmp.transaction_result.id</code>.
     */
    public final TableField<TransactionResultRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tmp.transaction_result.fee</code>.
     */
    public final TableField<TransactionResultRecord, ULong> FEE = createField("fee", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>tmp.transaction_result.code</code>.
     */
    public final TableField<TransactionResultRecord, UByte> CODE = createField("code", org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tmp.transaction_result.transaction_id</code>.
     */
    public final TableField<TransactionResultRecord, ULong> TRANSACTION_ID = createField("transaction_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>tmp.transaction_result</code> table reference
     */
    public TransactionResult() {
        this("transaction_result", null);
    }

    /**
     * Create an aliased <code>tmp.transaction_result</code> table reference
     */
    public TransactionResult(String alias) {
        this(alias, TRANSACTION_RESULT);
    }

    private TransactionResult(String alias, Table<TransactionResultRecord> aliased) {
        this(alias, aliased, null);
    }

    private TransactionResult(String alias, Table<TransactionResultRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Tmp.TMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TransactionResultRecord, ULong> getIdentity() {
        return Keys.IDENTITY_TRANSACTION_RESULT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TransactionResultRecord> getPrimaryKey() {
        return Keys.KEY_TRANSACTION_RESULT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TransactionResultRecord>> getKeys() {
        return Arrays.<UniqueKey<TransactionResultRecord>>asList(Keys.KEY_TRANSACTION_RESULT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TransactionResultRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TransactionResultRecord, ?>>asList(Keys.FK_TRANSACTION_RESULT_TX_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionResult as(String alias) {
        return new TransactionResult(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TransactionResult rename(String name) {
        return new TransactionResult(name, null);
    }
}
