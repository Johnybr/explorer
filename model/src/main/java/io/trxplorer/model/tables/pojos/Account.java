/*
 * This file is generated by jOOQ.
*/
package io.trxplorer.model.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Account implements Serializable {

    private static final long serialVersionUID = -234895399;

    private ULong     id;
    private String    accountName;
    private Byte      type;
    private String    address;
    private Long      balance;
    private ULong     allowance;
    private Timestamp latestWithdawTime;
    private Timestamp createTime;
    private Long      bandwidth;
    private UByte     isWitness;
    private UByte     isCommittee;

    public Account() {}

    public Account(Account value) {
        this.id = value.id;
        this.accountName = value.accountName;
        this.type = value.type;
        this.address = value.address;
        this.balance = value.balance;
        this.allowance = value.allowance;
        this.latestWithdawTime = value.latestWithdawTime;
        this.createTime = value.createTime;
        this.bandwidth = value.bandwidth;
        this.isWitness = value.isWitness;
        this.isCommittee = value.isCommittee;
    }

    public Account(
        ULong     id,
        String    accountName,
        Byte      type,
        String    address,
        Long      balance,
        ULong     allowance,
        Timestamp latestWithdawTime,
        Timestamp createTime,
        Long      bandwidth,
        UByte     isWitness,
        UByte     isCommittee
    ) {
        this.id = id;
        this.accountName = accountName;
        this.type = type;
        this.address = address;
        this.balance = balance;
        this.allowance = allowance;
        this.latestWithdawTime = latestWithdawTime;
        this.createTime = createTime;
        this.bandwidth = bandwidth;
        this.isWitness = isWitness;
        this.isCommittee = isCommittee;
    }

    public ULong getId() {
        return this.id;
    }

    public void setId(ULong id) {
        this.id = id;
    }

    public String getAccountName() {
        return this.accountName;
    }

    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    public Byte getType() {
        return this.type;
    }

    public void setType(Byte type) {
        this.type = type;
    }

    public String getAddress() {
        return this.address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public Long getBalance() {
        return this.balance;
    }

    public void setBalance(Long balance) {
        this.balance = balance;
    }

    public ULong getAllowance() {
        return this.allowance;
    }

    public void setAllowance(ULong allowance) {
        this.allowance = allowance;
    }

    public Timestamp getLatestWithdawTime() {
        return this.latestWithdawTime;
    }

    public void setLatestWithdawTime(Timestamp latestWithdawTime) {
        this.latestWithdawTime = latestWithdawTime;
    }

    public Timestamp getCreateTime() {
        return this.createTime;
    }

    public void setCreateTime(Timestamp createTime) {
        this.createTime = createTime;
    }

    public Long getBandwidth() {
        return this.bandwidth;
    }

    public void setBandwidth(Long bandwidth) {
        this.bandwidth = bandwidth;
    }

    public UByte getIsWitness() {
        return this.isWitness;
    }

    public void setIsWitness(UByte isWitness) {
        this.isWitness = isWitness;
    }

    public UByte getIsCommittee() {
        return this.isCommittee;
    }

    public void setIsCommittee(UByte isCommittee) {
        this.isCommittee = isCommittee;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Account (");

        sb.append(id);
        sb.append(", ").append(accountName);
        sb.append(", ").append(type);
        sb.append(", ").append(address);
        sb.append(", ").append(balance);
        sb.append(", ").append(allowance);
        sb.append(", ").append(latestWithdawTime);
        sb.append(", ").append(createTime);
        sb.append(", ").append(bandwidth);
        sb.append(", ").append(isWitness);
        sb.append(", ").append(isCommittee);

        sb.append(")");
        return sb.toString();
    }
}
