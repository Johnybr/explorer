/*
 * This file is generated by jOOQ.
*/
package io.trxplorer.model.tables;


import io.trxplorer.model.Keys;
import io.trxplorer.model.Tmp;
import io.trxplorer.model.tables.records.VotingRoundVoteLostRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VotingRoundVoteLost extends TableImpl<VotingRoundVoteLostRecord> {

    private static final long serialVersionUID = 644758642;

    /**
     * The reference instance of <code>tmp.voting_round_vote_lost</code>
     */
    public static final VotingRoundVoteLost VOTING_ROUND_VOTE_LOST = new VotingRoundVoteLost();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VotingRoundVoteLostRecord> getRecordType() {
        return VotingRoundVoteLostRecord.class;
    }

    /**
     * The column <code>tmp.voting_round_vote_lost.id</code>.
     */
    public final TableField<VotingRoundVoteLostRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tmp.voting_round_vote_lost.voting_round_id</code>.
     */
    public final TableField<VotingRoundVoteLostRecord, UInteger> VOTING_ROUND_ID = createField("voting_round_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tmp.voting_round_vote_lost.owner_address</code>.
     */
    public final TableField<VotingRoundVoteLostRecord, String> OWNER_ADDRESS = createField("owner_address", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>tmp.voting_round_vote_lost.vote_address</code>.
     */
    public final TableField<VotingRoundVoteLostRecord, String> VOTE_ADDRESS = createField("vote_address", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>tmp.voting_round_vote_lost.vote_count</code>.
     */
    public final TableField<VotingRoundVoteLostRecord, ULong> VOTE_COUNT = createField("vote_count", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tmp.voting_round_vote_lost.timestamp</code>.
     */
    public final TableField<VotingRoundVoteLostRecord, Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>tmp.voting_round_vote_lost</code> table reference
     */
    public VotingRoundVoteLost() {
        this("voting_round_vote_lost", null);
    }

    /**
     * Create an aliased <code>tmp.voting_round_vote_lost</code> table reference
     */
    public VotingRoundVoteLost(String alias) {
        this(alias, VOTING_ROUND_VOTE_LOST);
    }

    private VotingRoundVoteLost(String alias, Table<VotingRoundVoteLostRecord> aliased) {
        this(alias, aliased, null);
    }

    private VotingRoundVoteLost(String alias, Table<VotingRoundVoteLostRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Tmp.TMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VotingRoundVoteLostRecord, ULong> getIdentity() {
        return Keys.IDENTITY_VOTING_ROUND_VOTE_LOST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VotingRoundVoteLostRecord> getPrimaryKey() {
        return Keys.KEY_VOTING_ROUND_VOTE_LOST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VotingRoundVoteLostRecord>> getKeys() {
        return Arrays.<UniqueKey<VotingRoundVoteLostRecord>>asList(Keys.KEY_VOTING_ROUND_VOTE_LOST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VotingRoundVoteLostRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VotingRoundVoteLostRecord, ?>>asList(Keys.FK_VOTING_ROUND_VOTE_LOST_VOTING_ROUND_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VotingRoundVoteLost as(String alias) {
        return new VotingRoundVoteLost(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VotingRoundVoteLost rename(String name) {
        return new VotingRoundVoteLost(name, null);
    }
}
