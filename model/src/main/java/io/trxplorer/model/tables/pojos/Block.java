/*
 * This file is generated by jOOQ.
*/
package io.trxplorer.model.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Block implements Serializable {

    private static final long serialVersionUID = -1096197351;

    private ULong     id;
    private ULong     num;
    private String    hash;
    private String    parentHash;
    private String    txtrieroot;
    private UInteger  txCount;
    private Timestamp timestamp;
    private UInteger  size;
    private ULong     witnessId;
    private String    witnessAddress;
    private UInteger  blockTime;
    private Byte      confirmed;

    public Block() {}

    public Block(Block value) {
        this.id = value.id;
        this.num = value.num;
        this.hash = value.hash;
        this.parentHash = value.parentHash;
        this.txtrieroot = value.txtrieroot;
        this.txCount = value.txCount;
        this.timestamp = value.timestamp;
        this.size = value.size;
        this.witnessId = value.witnessId;
        this.witnessAddress = value.witnessAddress;
        this.blockTime = value.blockTime;
        this.confirmed = value.confirmed;
    }

    public Block(
        ULong     id,
        ULong     num,
        String    hash,
        String    parentHash,
        String    txtrieroot,
        UInteger  txCount,
        Timestamp timestamp,
        UInteger  size,
        ULong     witnessId,
        String    witnessAddress,
        UInteger  blockTime,
        Byte      confirmed
    ) {
        this.id = id;
        this.num = num;
        this.hash = hash;
        this.parentHash = parentHash;
        this.txtrieroot = txtrieroot;
        this.txCount = txCount;
        this.timestamp = timestamp;
        this.size = size;
        this.witnessId = witnessId;
        this.witnessAddress = witnessAddress;
        this.blockTime = blockTime;
        this.confirmed = confirmed;
    }

    public ULong getId() {
        return this.id;
    }

    public void setId(ULong id) {
        this.id = id;
    }

    public ULong getNum() {
        return this.num;
    }

    public void setNum(ULong num) {
        this.num = num;
    }

    public String getHash() {
        return this.hash;
    }

    public void setHash(String hash) {
        this.hash = hash;
    }

    public String getParentHash() {
        return this.parentHash;
    }

    public void setParentHash(String parentHash) {
        this.parentHash = parentHash;
    }

    public String getTxtrieroot() {
        return this.txtrieroot;
    }

    public void setTxtrieroot(String txtrieroot) {
        this.txtrieroot = txtrieroot;
    }

    public UInteger getTxCount() {
        return this.txCount;
    }

    public void setTxCount(UInteger txCount) {
        this.txCount = txCount;
    }

    public Timestamp getTimestamp() {
        return this.timestamp;
    }

    public void setTimestamp(Timestamp timestamp) {
        this.timestamp = timestamp;
    }

    public UInteger getSize() {
        return this.size;
    }

    public void setSize(UInteger size) {
        this.size = size;
    }

    public ULong getWitnessId() {
        return this.witnessId;
    }

    public void setWitnessId(ULong witnessId) {
        this.witnessId = witnessId;
    }

    public String getWitnessAddress() {
        return this.witnessAddress;
    }

    public void setWitnessAddress(String witnessAddress) {
        this.witnessAddress = witnessAddress;
    }

    public UInteger getBlockTime() {
        return this.blockTime;
    }

    public void setBlockTime(UInteger blockTime) {
        this.blockTime = blockTime;
    }

    public Byte getConfirmed() {
        return this.confirmed;
    }

    public void setConfirmed(Byte confirmed) {
        this.confirmed = confirmed;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Block (");

        sb.append(id);
        sb.append(", ").append(num);
        sb.append(", ").append(hash);
        sb.append(", ").append(parentHash);
        sb.append(", ").append(txtrieroot);
        sb.append(", ").append(txCount);
        sb.append(", ").append(timestamp);
        sb.append(", ").append(size);
        sb.append(", ").append(witnessId);
        sb.append(", ").append(witnessAddress);
        sb.append(", ").append(blockTime);
        sb.append(", ").append(confirmed);

        sb.append(")");
        return sb.toString();
    }
}
