/*
 * This file is generated by jOOQ.
*/
package io.trxplorer.model.tables;


import io.trxplorer.model.Keys;
import io.trxplorer.model.Tmp;
import io.trxplorer.model.tables.records.ContractAccountUpdateRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContractAccountUpdate extends TableImpl<ContractAccountUpdateRecord> {

    private static final long serialVersionUID = -2015415273;

    /**
     * The reference instance of <code>tmp.contract_account_update</code>
     */
    public static final ContractAccountUpdate CONTRACT_ACCOUNT_UPDATE = new ContractAccountUpdate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContractAccountUpdateRecord> getRecordType() {
        return ContractAccountUpdateRecord.class;
    }

    /**
     * The column <code>tmp.contract_account_update.id</code>.
     */
    public final TableField<ContractAccountUpdateRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tmp.contract_account_update.account_name</code>.
     */
    public final TableField<ContractAccountUpdateRecord, String> ACCOUNT_NAME = createField("account_name", org.jooq.impl.SQLDataType.VARCHAR.length(250).nullable(false), this, "");

    /**
     * The column <code>tmp.contract_account_update.owner_id</code>.
     */
    public final TableField<ContractAccountUpdateRecord, ULong> OWNER_ID = createField("owner_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>tmp.contract_account_update.transaction_id</code>.
     */
    public final TableField<ContractAccountUpdateRecord, ULong> TRANSACTION_ID = createField("transaction_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tmp.contract_account_update.owner_address</code>.
     */
    public final TableField<ContractAccountUpdateRecord, String> OWNER_ADDRESS = createField("owner_address", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * Create a <code>tmp.contract_account_update</code> table reference
     */
    public ContractAccountUpdate() {
        this("contract_account_update", null);
    }

    /**
     * Create an aliased <code>tmp.contract_account_update</code> table reference
     */
    public ContractAccountUpdate(String alias) {
        this(alias, CONTRACT_ACCOUNT_UPDATE);
    }

    private ContractAccountUpdate(String alias, Table<ContractAccountUpdateRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContractAccountUpdate(String alias, Table<ContractAccountUpdateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Tmp.TMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ContractAccountUpdateRecord, ULong> getIdentity() {
        return Keys.IDENTITY_CONTRACT_ACCOUNT_UPDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ContractAccountUpdateRecord> getPrimaryKey() {
        return Keys.KEY_CONTRACT_ACCOUNT_UPDATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ContractAccountUpdateRecord>> getKeys() {
        return Arrays.<UniqueKey<ContractAccountUpdateRecord>>asList(Keys.KEY_CONTRACT_ACCOUNT_UPDATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ContractAccountUpdateRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ContractAccountUpdateRecord, ?>>asList(Keys.FK_CONTRACT_ACCOUNT_UPDATE_OWNER_ID, Keys.FK_CONTRACT_ACCOUNT_UPDATE_TX_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContractAccountUpdate as(String alias) {
        return new ContractAccountUpdate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ContractAccountUpdate rename(String name) {
        return new ContractAccountUpdate(name, null);
    }
}
