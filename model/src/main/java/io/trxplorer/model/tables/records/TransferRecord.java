/*
 * This file is generated by jOOQ.
*/
package io.trxplorer.model.tables.records;


import io.trxplorer.model.tables.Transfer;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransferRecord extends UpdatableRecordImpl<TransferRecord> implements Record7<ULong, String, String, ULong, String, Timestamp, ULong> {

    private static final long serialVersionUID = 512162974;

    /**
     * Setter for <code>tmp.transfer.id</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>tmp.transfer.id</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>tmp.transfer.from</code>.
     */
    public void setFrom(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>tmp.transfer.from</code>.
     */
    public String getFrom() {
        return (String) get(1);
    }

    /**
     * Setter for <code>tmp.transfer.to</code>.
     */
    public void setTo(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>tmp.transfer.to</code>.
     */
    public String getTo() {
        return (String) get(2);
    }

    /**
     * Setter for <code>tmp.transfer.amount</code>.
     */
    public void setAmount(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>tmp.transfer.amount</code>.
     */
    public ULong getAmount() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>tmp.transfer.token</code>.
     */
    public void setToken(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>tmp.transfer.token</code>.
     */
    public String getToken() {
        return (String) get(4);
    }

    /**
     * Setter for <code>tmp.transfer.timestamp</code>.
     */
    public void setTimestamp(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>tmp.transfer.timestamp</code>.
     */
    public Timestamp getTimestamp() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>tmp.transfer.transaction_id</code>.
     */
    public void setTransactionId(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>tmp.transfer.transaction_id</code>.
     */
    public ULong getTransactionId() {
        return (ULong) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<ULong, String, String, ULong, String, Timestamp, ULong> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<ULong, String, String, ULong, String, Timestamp, ULong> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return Transfer.TRANSFER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Transfer.TRANSFER.FROM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Transfer.TRANSFER.TO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field4() {
        return Transfer.TRANSFER.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Transfer.TRANSFER.TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Transfer.TRANSFER.TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field7() {
        return Transfer.TRANSFER.TRANSACTION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getFrom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value4() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value7() {
        return getTransactionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferRecord value2(String value) {
        setFrom(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferRecord value3(String value) {
        setTo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferRecord value4(ULong value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferRecord value5(String value) {
        setToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferRecord value6(Timestamp value) {
        setTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferRecord value7(ULong value) {
        setTransactionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferRecord values(ULong value1, String value2, String value3, ULong value4, String value5, Timestamp value6, ULong value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransferRecord
     */
    public TransferRecord() {
        super(Transfer.TRANSFER);
    }

    /**
     * Create a detached, initialised TransferRecord
     */
    public TransferRecord(ULong id, String from, String to, ULong amount, String token, Timestamp timestamp, ULong transactionId) {
        super(Transfer.TRANSFER);

        set(0, id);
        set(1, from);
        set(2, to);
        set(3, amount);
        set(4, token);
        set(5, timestamp);
        set(6, transactionId);
    }
}
