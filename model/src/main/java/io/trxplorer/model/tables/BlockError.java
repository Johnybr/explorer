/*
 * This file is generated by jOOQ.
*/
package io.trxplorer.model.tables;


import io.trxplorer.model.Keys;
import io.trxplorer.model.Tmp;
import io.trxplorer.model.tables.records.BlockErrorRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BlockError extends TableImpl<BlockErrorRecord> {

    private static final long serialVersionUID = -633261231;

    /**
     * The reference instance of <code>tmp.block_error</code>
     */
    public static final BlockError BLOCK_ERROR = new BlockError();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BlockErrorRecord> getRecordType() {
        return BlockErrorRecord.class;
    }

    /**
     * The column <code>tmp.block_error.id</code>.
     */
    public final TableField<BlockErrorRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tmp.block_error.block</code>.
     */
    public final TableField<BlockErrorRecord, ULong> BLOCK = createField("block", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tmp.block_error.error</code>.
     */
    public final TableField<BlockErrorRecord, String> ERROR = createField("error", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>tmp.block_error</code> table reference
     */
    public BlockError() {
        this("block_error", null);
    }

    /**
     * Create an aliased <code>tmp.block_error</code> table reference
     */
    public BlockError(String alias) {
        this(alias, BLOCK_ERROR);
    }

    private BlockError(String alias, Table<BlockErrorRecord> aliased) {
        this(alias, aliased, null);
    }

    private BlockError(String alias, Table<BlockErrorRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Tmp.TMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BlockErrorRecord, ULong> getIdentity() {
        return Keys.IDENTITY_BLOCK_ERROR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BlockErrorRecord> getPrimaryKey() {
        return Keys.KEY_BLOCK_ERROR_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BlockErrorRecord>> getKeys() {
        return Arrays.<UniqueKey<BlockErrorRecord>>asList(Keys.KEY_BLOCK_ERROR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlockError as(String alias) {
        return new BlockError(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BlockError rename(String name) {
        return new BlockError(name, null);
    }
}
