/*
 * This file is generated by jOOQ.
*/
package io.trxplorer.model.tables;


import io.trxplorer.model.Keys;
import io.trxplorer.model.Tmp;
import io.trxplorer.model.tables.records.AccountAssetRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountAsset extends TableImpl<AccountAssetRecord> {

    private static final long serialVersionUID = 1027028831;

    /**
     * The reference instance of <code>tmp.account_asset</code>
     */
    public static final AccountAsset ACCOUNT_ASSET = new AccountAsset();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccountAssetRecord> getRecordType() {
        return AccountAssetRecord.class;
    }

    /**
     * The column <code>tmp.account_asset.id</code>.
     */
    public final TableField<AccountAssetRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tmp.account_asset.asset_name</code>.
     */
    public final TableField<AccountAssetRecord, String> ASSET_NAME = createField("asset_name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>tmp.account_asset.balance</code>.
     */
    public final TableField<AccountAssetRecord, ULong> BALANCE = createField("balance", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>tmp.account_asset.account_id</code>.
     */
    public final TableField<AccountAssetRecord, ULong> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>tmp.account_asset</code> table reference
     */
    public AccountAsset() {
        this("account_asset", null);
    }

    /**
     * Create an aliased <code>tmp.account_asset</code> table reference
     */
    public AccountAsset(String alias) {
        this(alias, ACCOUNT_ASSET);
    }

    private AccountAsset(String alias, Table<AccountAssetRecord> aliased) {
        this(alias, aliased, null);
    }

    private AccountAsset(String alias, Table<AccountAssetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Tmp.TMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AccountAssetRecord, ULong> getIdentity() {
        return Keys.IDENTITY_ACCOUNT_ASSET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AccountAssetRecord> getPrimaryKey() {
        return Keys.KEY_ACCOUNT_ASSET_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AccountAssetRecord>> getKeys() {
        return Arrays.<UniqueKey<AccountAssetRecord>>asList(Keys.KEY_ACCOUNT_ASSET_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AccountAssetRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AccountAssetRecord, ?>>asList(Keys.FK_ACCOUNT_ASSET_ACCOUNT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountAsset as(String alias) {
        return new AccountAsset(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AccountAsset rename(String name) {
        return new AccountAsset(name, null);
    }
}
